JUnit support

 We introduced JUnit support in tap4j 1.4.3. The integration between tap4j and 
 JUnit is achieved through the use of a JUnit RunListener 
 {{{http://junit.sourceforge.net/javadoc_40/org/junit/runner/notification/RunListener.html}(JUnit RunListener)}}.
 
 In order to be able to produce tap files with JUnit you have to tell  
 JUnit that you will be using a Listener. For that you will need to create an initial 
 test executor class, instantiate a JUnitCore object, add the JUnitTestTapReporter listener class
 provided by tap4j and run your tests.
 
 The classes for JUnit are inside org.tap4j.ext.junit package. The class 
 JUnitTestTapReporter extends RunListener and generates TAP per suite, class and 
 method. 
 
* JUnit test executor class
 
 Your initial test executor class will look like this.

+---+
package sample;

import junit.framework.TestSuite;

import org.junit.runner.JUnitCore;
import org.tap4j.ext.junit.JUnitTestTapReporter;

public class RunJUnitSuiteWithListener 
{
	public static void main(String[] args) 
	{
		// Create a JUnit suite
		TestSuite suite = new TestSuite();
		
		// Add every test class you want to the suite
		suite.addTestSuite(YourJUnitTestClass1.class);
		suite.addTestSuite(YourJUnitTestClass2.class);
		
		// Instantiate a JUniteCore object
		JUnitCore core = new JUnitCore();
		
		// Add TAP Reporter Listener to the core object executor
		core.addListener(new JUnitTestTapReporter());
		
		// Run the test suite
		core.run(suite);
	}
}
+---+


* Command line
 
+---+
java -classpath %CLASSPATH%;junit-4.0.jar;jcommander-1.5.jar;commons-io-1.4.jar;
guice-2.0.jar;commons-lang-2.5.jar;bsh-2.0b4.jar;snakeyaml-1.7.jar;
aopalliance-1.0.jar;tap4j-1.4.3.jar;. RunJUnitTestWithListener
+---+
 
 Don´t forget to check all the dependencies versions and directory location