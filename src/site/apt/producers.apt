Producers
 
 Producers produce TAP Streams. A producer is able, for instance, to output the 
 following text.
 
+---+
1..3
ok 1
ok 2 # TODO review this test case
not ok 3
  ---
  file: br.eti.kinoshita.tap4j.ext.TestTestNGSupport.java
  ...
# a comment
+---+

 With the following code.
 
+---+
    ...
    TapProducer tapProducer = TapProducerFactory.makeTap13YamlProducer();
	    
    TestSet testSet = new TestSet();
    testSet.setPlan( new Plan( 3 ) );
    
    TestResult testResult = new TestResult( StatusValues.OK, 1 );
    testSet.addTestResult( testResult );
    
    testResult = new TestResult( StatusValues.OK, 2 );
    Directive todoDirective = new Directive( DirectiveValues.TODO, "review this test case" );
    testResult.setDirective( todoDirective );
    testSet.addTestResult( testResult );
    
    testResult = new TestResult( StatusValues.NOT_OK, 3 );
	LinkedHashMap<String, Object> diagnostic = new LinkedHashMap<String, Object>();
	diagnostic.put( "file", "br.eti.kinoshita.tap4j.ext.TestTestNGSupport.java" );
	testResult.setDiagnostic( diagnostic );
	testSet.addTestResult( testResult );
    
	testSet.addComment( new Comment( "a comment" ) );
    
	String tapStream = tapProducer.dump( testSet );
	
    System.out.println(tapStream);
    ...
+---+ 

 As you can see here the TapProducer keeps the order of the elements inserted.